# Generated by Django 5.0.7 on 2024-11-16 15:26

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='property_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('Building_Age', models.IntegerField()),
                ('property_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('area', models.CharField(max_length=50)),
                ('length', models.CharField(max_length=50)),
                ('breadth', models.CharField(max_length=50)),
                ('country', models.CharField(default='US', max_length=50, null=True)),
                ('state', models.CharField(max_length=50, null=True)),
                ('county', models.CharField(max_length=50, null=True)),
                ('city', models.CharField(max_length=50, null=True)),
                ('address', models.CharField(max_length=200, null=True)),
                ('visit_count', models.IntegerField(default=0)),
                ('rating', models.FloatField(default=0.0)),
                ('rating_count', models.IntegerField(default=0)),
                ('proprty_info', models.CharField(blank=True, choices=[('1BHK', '1BHK'), ('2BHK', '2BHK'), ('3BHK', '3BHK'), ('4BHK', '4BHK')], default='1BHK', max_length=100, null=True)),
                ('proprty_status', models.BooleanField(blank=True, default=True, null=True)),
                ('No_of_floors', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, default='No description provided')),
                ('for_family', models.BooleanField(blank=True, default=True, null=True)),
                ('for_business', models.BooleanField(blank=True, default=True, null=True)),
                ('pet_friendly', models.BooleanField(blank=True, default=True, null=True)),
                ('posted_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('parking', models.CharField(blank=True, choices=[('two wheeler', 'two wheeler'), ('car', 'car'), ('No parking', 'No parking')], default='no_parking', max_length=100, null=True)),
                ('facing', models.CharField(blank=True, choices=[('North', 'North'), ('North-East', 'North-East'), ('East', 'East'), ('South-East', 'South-East'), ('South', 'South'), ('South-West', 'South-West'), ('West', 'West'), ('North-West', 'North-West')], default='East', max_length=100, null=True)),
                ('furnish_detail', models.CharField(blank=True, choices=[('Furnished', 'Furnished'), ('Semi-Furnished', 'Semi-Furnished'), ('Not-Furnished', 'Not-Furnished')], default='Not-Furnished', max_length=100, null=True)),
                ('garden', models.BooleanField(blank=True, default=True, null=True)),
                ('sunlight_access', models.BooleanField(blank=True, default=True, null=True)),
                ('road_side_parking', models.BooleanField(blank=True, default=True, null=True)),
                ('water_drainage', models.BooleanField(blank=True, default=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='properties_img/')),
                ('images', models.JSONField(blank=True, default=list, null=True)),
                ('Adjacent_Roads', models.CharField(max_length=100, null=True)),
                ('balcony', models.BooleanField(blank=True, default=True, null=True)),
                ('basement', models.BooleanField(blank=True, default=True, null=True)),
                ('roof_condition', models.CharField(blank=True, choices=[('New', 'New'), ('Old', 'Old')], default='New', max_length=100, null=True)),
                ('window', models.JSONField(blank=True, default=list)),
                ('flooring', models.CharField(blank=True, choices=[('Hardwood', 'Hardwood'), ('Tile', 'Tile'), ('Carpet', 'Carpet')], default='Standard', max_length=100, null=True)),
                ('ceiling_condition', models.CharField(blank=True, choices=[('Standard', 'Standard'), ('High', 'High')], default='Standard', max_length=100, null=True)),
                ('Property_Features_descriptions', models.CharField(blank=True, max_length=200, null=True)),
                ('air_Pollution_Levels', models.CharField(blank=True, choices=[('Low', 'Low'), ('Moderate', 'Moderate'), ('High', 'High')], max_length=100, null=True)),
                ('Noise_Pollution', models.CharField(blank=True, choices=[('Low', 'Low'), ('Moderate', 'Moderate'), ('High', 'High')], max_length=100, null=True)),
                ('Flood_Zone', models.BooleanField(blank=True, default=False, null=True)),
                ('Earthquake_zone', models.BooleanField(blank=True, default=False, null=True)),
                ('Environmental_Factors_descriptions', models.CharField(blank=True, max_length=200, null=True)),
                ('public_transportation', models.CharField(blank=True, max_length=100, null=True)),
                ('handicap_accesibility', models.CharField(blank=True, choices=[('Full', 'Low'), ('Partial', 'Moderate'), ('Not Available', 'Not Available')], max_length=100, null=True)),
                ('proximity_to_airport', models.CharField(blank=True, max_length=100, null=True)),
                ('road_quality', models.CharField(blank=True, choices=[('Paved', 'Paved'), ('Unpaved', 'Unpaved')], max_length=100, null=True)),
                ('Accessebility_descriptions', models.CharField(blank=True, max_length=200, null=True)),
                ('Neighborhood_Crime_Rate', models.CharField(blank=True, choices=[('Low', 'Low'), ('Moderate', 'Moderate'), ('High', 'High')], max_length=100, null=True)),
                ('Police_Station_Proximity', models.CharField(blank=True, max_length=100, null=True)),
                ('Fire_Station_Proximity', models.CharField(blank=True, max_length=100, null=True)),
                ('Security_Features', models.CharField(blank=True, max_length=100, null=True)),
                ('Safety_security_descriptions', models.CharField(blank=True, max_length=200, null=True)),
                ('Internet_Speed', models.CharField(blank=True, choices=[('Low', 'Low'), ('Moderate', 'Moderate'), ('High', 'High')], max_length=100, null=True)),
                ('Cell_Network_Coverage', models.CharField(blank=True, choices=[('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], max_length=100, null=True)),
                ('Electric_Vehicle_Charging', models.BooleanField(blank=True, default=True, null=True)),
                ('Smart_Home_Features', models.JSONField(blank=True, default=list)),
                ('Technoly_connectivity_descriptions', models.CharField(blank=True, max_length=200, null=True)),
                ('Community_Events', models.CharField(blank=True, choices=[('Monthly', 'Monthly'), ('Quaterly', 'Quaterly'), ('Yearly', 'Yearly'), ('No Events', 'No Events')], max_length=100, null=True)),
                ('Neighborhood_Vibe', models.CharField(blank=True, choices=[('Family-Friendly', 'Family-Friendly'), ('Active', 'Active')], max_length=100, null=True)),
                ('Social_Clubs_and_Groups', models.CharField(blank=True, max_length=100, null=True)),
                ('community_descriptions', models.CharField(blank=True, max_length=200, null=True)),
                ('Proximity_to_Parks', models.CharField(blank=True, max_length=100, null=True)),
                ('Gardens_Greenery', models.CharField(blank=True, choices=[('Private', 'Private'), ('Community', 'Community')], max_length=100, null=True)),
                ('Pet_Friendly_Areas', models.BooleanField(blank=True, default=True, null=True)),
                ('greenspaces_and_outdoor_descriptions', models.CharField(blank=True, max_length=200, null=True)),
                ('Schools_Nearby', models.CharField(blank=True, max_length=100, null=True)),
                ('Childcare_Centers', models.BooleanField(blank=True, default=True, null=True)),
                ('Playgrounds', models.CharField(blank=True, choices=[('Nearby', 'Nearby'), ('Onsite', 'Onsite')], max_length=100, null=True)),
                ('Education_descriptions', models.CharField(blank=True, max_length=200, null=True)),
                ('Electricity_Reliability', models.CharField(blank=True, choices=[('High', 'High'), ('Moderate', 'Moderate')], max_length=100, null=True)),
                ('Water_Supply_Quality', models.CharField(blank=True, choices=[('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], max_length=100, null=True)),
                ('Waste_Collection', models.CharField(blank=True, choices=[('Weekly', 'Weekly'), ('Bi-Weekly', 'Bi-Weekly')], max_length=100, null=True)),
                ('Utility_and_Service_Quality_descriptions', models.CharField(blank=True, max_length=200, null=True)),
                ('Business_District_Proximity', models.CharField(blank=True, max_length=100, null=True)),
                ('Industrial_Areas', models.CharField(blank=True, max_length=100, null=True)),
                ('Nearby_Employment_Centers_descriptions', models.CharField(blank=True, max_length=200, null=True)),
                ('Major_Highways_Access', models.CharField(blank=True, max_length=100, null=True)),
                ('Commute_Time_to_Downtown', models.CharField(blank=True, max_length=100, null=True)),
                ('Transportation_and_Commute_descriptions', models.CharField(blank=True, max_length=200, null=True)),
                ('Historical_Building_Status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('Cultural_Heritage_Sites', models.CharField(blank=True, choices=[('Nearby', 'Nearby'), ('Not Nearby', 'Not Nearby')], max_length=100, null=True)),
                ('Luxury_Amenities', models.JSONField(blank=True, default=list)),
                ('Special_Features_descriptions', models.CharField(blank=True, max_length=200, null=True)),
                ('Food_Banks', models.CharField(blank=True, max_length=100, null=True)),
                ('Community_Centers', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('Community_Support_Services_descriptions', models.CharField(blank=True, max_length=200, null=True)),
                ('Average_Annual_Rainfall', models.CharField(blank=True, max_length=100, null=True)),
                ('Snowfall', models.CharField(blank=True, max_length=100, null=True)),
                ('Weather_Related_Factors_descriptions', models.CharField(blank=True, max_length=200, null=True)),
                ('Assigned_Parking', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('Bicycle_Parking', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('Parking_and_Transportation_descriptions', models.CharField(blank=True, max_length=200, null=True)),
                ('owners', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('post_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='properties.property_type')),
            ],
        ),
    ]
